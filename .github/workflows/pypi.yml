name: Publish Python distribution 📦 to PyPI and TestPyPI

on: push

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Modify version for non-main branches
      run: |
        if [ "${{ github.ref }}" != "refs/heads/main" ]; then
          # Get current version from pyproject.toml
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "//' | sed 's/"//')
          
          # Create unique pre-release version with run number (PEP 440 compliant)
          RUN_NUMBER=${{ github.run_number }}
          NEW_VERSION="${CURRENT_VERSION}rc${RUN_NUMBER}"
          
          # Update version in pyproject.toml
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${NEW_VERSION}\"/" pyproject.toml
          
          echo "Updated version from ${CURRENT_VERSION} to ${NEW_VERSION}"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
        else
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "//' | sed 's/"//')
          echo "Main branch - keeping version: ${CURRENT_VERSION}"
          echo "NEW_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
        fi
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/') || github.ref != 'refs/heads/main'  # publish to PyPI on tag pushes (stable) or non-main branches (RC)
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/task-trellis-mcp
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1